# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class ConsoleRecord(UniversalBaseModel):
    """
    Shell command console record model
    """

    ps_1: typing_extensions.Annotated[str, FieldMetadata(alias="ps1")] = pydantic.Field()
    """
    Command prompt
    """

    command: str = pydantic.Field()
    """
    Executed command
    """

    output: typing.Optional[str] = pydantic.Field(default=None)
    """
    Command output
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
