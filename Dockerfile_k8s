FROM continuumio/miniconda3:23.3.1-0

# TODO(romilb): Investigate if this image can be consolidated with the skypilot
#  client image (`Dockerfile`)

ARG DEBIAN_FRONTEND=noninteractive
# Detect architecture
ARG TARGETARCH

# Initialize conda for root user, install ssh and other local dependencies
RUN apt update -y && \
    apt install git gcc rsync sudo patch openssh-server pciutils nano fuse socat netcat-openbsd curl -y && \
    rm -rf /var/lib/apt/lists/* && \
    apt remove -y python3 && \
    conda init

# Setup SSH and generate hostkeys
RUN mkdir -p /var/run/sshd && \
    sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \
    sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd && \
    cd /etc/ssh/ && \
    ssh-keygen -A

# Setup new user named sky and add to sudoers. Also add /opt/conda/bin to sudo path.
RUN useradd -m -s /bin/bash sky && \
    echo "sky ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
    echo 'Defaults        secure_path="/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"' > /etc/sudoers.d/sky

# Switch to sky user
USER sky

# Set HOME environment variable for sky user
ENV HOME=/home/sky

# Set current working directory
WORKDIR /home/sky

SHELL ["/bin/bash", "-c"]

# Install skypilot dependencies
RUN conda init && \
    export PIP_DISABLE_PIP_VERSION_CHECK=1 && \
    curl -LsSf https://astral.sh/uv/install.sh | sh && \
    $HOME/.local/bin/uv venv ~/skypilot-runtime --seed --python=3.10 && \
    source ~/skypilot-runtime/bin/activate && \
    $HOME/.local/bin/uv pip install 'skypilot-nightly[remote,kubernetes]' 'ray[default]==2.9.3' 'pycryptodome==3.12.0' && \
    $HOME/.local/bin/uv pip uninstall skypilot-nightly && \
    ARCH=${TARGETARCH:-$(case "$(uname -m)" in \
        "x86_64") echo "amd64" ;; \
        "aarch64") echo "arm64" ;; \
        *) echo "$(uname -m)" ;; \
    esac)} && \
    curl -LO "https://dl.k8s.io/release/v1.31.6/bin/linux/$ARCH/kubectl" && \
    chmod +x kubectl && \
    mkdir -p $HOME/.local/bin && \
    mv kubectl $HOME/.local/bin/ && \
    echo 'export PATH="$PATH:$HOME/.local/bin"' >> ~/.bashrc

# Set PYTHONUNBUFFERED=1 to have Python print to stdout/stderr immediately
ENV PYTHONUNBUFFERED=1
