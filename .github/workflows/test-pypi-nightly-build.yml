name: test-pypi-publish-nightly
on:
  schedule:
    - cron: '35 10 * * *' # 10:35am UTC, 2:35am PST, 5:35am EST
  workflow_dispatch:

jobs:
  # nightly release check from https://stackoverflow.com/a/67527144
  check-date:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v3
      - name: print latest_commit
        run: echo ${{ github.sha }}
      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"

  nightly-build-pypi:
    runs-on: ubuntu-latest
    needs: check-date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    outputs:
      build_number: ${{ steps.extract_build_number.outputs.build_number }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip' # caching pip dependencies
      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          --user
      - name: Set release version
        run: |
          RELEASE_VERSION=$(date +%Y%m%d)
          sed -i "s/{{SKYPILOT_COMMIT_SHA}}/${{ github.sha }}/g" sky/__init__.py
          sed -i "s/__version__ = '.*'/__version__ = '1.0.0.dev${RELEASE_VERSION}'/g" sky/__init__.py
          sed -i "s/name='skypilot',/name='skypilot-nightly',/g" sky/setup_files/setup.py
      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
          .

      # Trigger Buildkite smoke tests
      - name: Trigger Buildkite Smoke Tests
        id: trigger_buildkite
        uses: buildkite/trigger-pipeline-action@v2.3.0
        with:
          buildkite_api_access_token: ${{ secrets.BUILDKITE_TOKEN }}
          pipeline: "skypilot-1/smoke-tests"
          branch: "master"
          commit: "${{ github.sha }}"
          message: "nightly-build-pypi"
          ignore_pipeline_branch_filter: true
          build_env_vars: '{"ARGS": "--aws -k test_copy_mount_existing_storage"}'

      # Extract build number from response JSON
      - name: Extract build number
        id: extract_build_number
        run: |
          build_number=$(echo '${{ steps.trigger_buildkite.outputs.json }}' | jq -r '.number')
          echo "build_number=$build_number" >> $GITHUB_OUTPUT

  wait-for-buildkite:
    needs: nightly-build-pypi
    uses: ./.github/workflows/wait-for-buildkite.yml
    with:
      organization: "skypilot-1"
      pipeline: "smoke-tests"
      build_number: ${{ needs.nightly-build-pypi.outputs.build_number }}
      timeout_minutes: 120
    secrets:
      BUILDKITE_TOKEN: ${{ secrets.BUILDKITE_TOKEN }}

  test-publishing:
    needs: wait-for-buildkite
    runs-on: ubuntu-latest
    steps:
      # Test PyPI publishing based on Buildkite result
      - name: Test PyPI Publish (Mock)
        if: needs.wait-for-buildkite.outputs.build_status == 'success'
        run: |
          echo success
          exit 0

      - name: Test PyPI Publish Failure (Mock)
        if: needs.wait-for-buildkite.outputs.build_status != 'success'
        run: |
          echo failure
          exit 1
