name: Publish Helm Charts

# Do not change this
concurrency: publish-helm

env:
  HELM_REPO_URL: https://helm.skypilot.co

permissions:
  contents: write
  pages: write

on:
  workflow_call:
    inputs:
      version:
        description: "Version to set in Chart.yaml"
        required: false
        type: string
      commit_message:
        description: "Git commit message"
        required: false
        type: string
      package_name:
        description: "Package name to use as chart name and docker image name"
        required: false
        type: string
        default: "skypilot-nightly"
    secrets:
      DOCKER_USERNAME:
        required: true
      HELM_DEPLOY_KEY:
        required: true
  workflow_dispatch:
    inputs:
      version:
        description: "Version to set in Chart.yaml"
        required: false
        type: string
      commit_message:
        description: "Git commit message"
        required: false
        type: string
        default: "Updated from ref: $GITHUB_SHA"
      package_name:
        description: "Package name to use as chart name and docker image name"
        required: false
        type: string
        default: "skypilot-nightly"
    secrets:
      DOCKER_USERNAME:
        required: true
      HELM_DEPLOY_KEY:
        required: true

jobs:
  publish-helm:
    # Skip if triggered by release workflow
    if: ${{ !contains(github.event.head_commit.message, 'Release version') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: 'src'
          fetch-depth: 0

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.HELM_DEPLOY_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          cat >> ~/.ssh/config << EOF
          Host github.com
            IdentityFile ~/.ssh/deploy_key
            StrictHostKeyChecking no
          EOF

      - name: Checkout Helm Repository
        uses: actions/checkout@v3
        with:
          path: 'dest'
          repository: 'skypilot-org/skypilot-helm'
          ssh-key: ${{ secrets.HELM_DEPLOY_KEY }}
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Update Chart Version and Name
        if: inputs.version != ''
        run: |
          version="${{ inputs.version }}"
          # Convert PEP440 version to SemVer if needed for Helm versioning
          # Handle cases like 1.0.0.dev20250218 -> 1.0.0-dev.20250218
          semversion=$(echo "$version" | sed -E 's/([0-9]+\.[0-9]+\.[0-9]+)\.dev([0-9]+)/\1-dev.\2/')
          # Update the version and name in the Chart.yaml file
          sed -i "s/^version:.*$/version: ${semversion}/" src/charts/skypilot/Chart.yaml
          sed -i "s/^appVersion:.*$/appVersion: ${version}/" src/charts/skypilot/Chart.yaml
          sed -i "s/^name:.*$/name: ${{ inputs.package_name }}/" src/charts/skypilot/Chart.yaml

      - name: Update docker image in charts
        if: inputs.version != ''
        run: |
          # Update the image in values.yaml
          sed -i "s|image: .*$|image: ${{ secrets.DOCKER_USERNAME }}/${{ inputs.package_name }}:${{ inputs.version }}|" src/charts/skypilot/values.yaml
          # Print the new values.yaml for debugging
          cat src/charts/skypilot/values.yaml

      - name: Package Helm Charts
        shell: bash
        run: |
          find src/charts/ -type f -name 'Chart.yaml' | sed -r 's|/[^/]+$||' | sort | uniq | xargs -L 1 helm dep up
          for d in src/charts/*/ ; do
              echo "$d"
              helm package "$d" -u -d dest
          done

      - name: Push New Files
        shell: bash
        working-directory: dest
        run: |
          helm repo index . --url ${{ env.HELM_REPO_URL }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Add both untracked files and .tgz files explicitly
          git add $(git ls-files -o --exclude-standard)
          git add *.tgz
          git add index.yaml
          # Show what's being committed for debugging
          git status
          git commit -m "${{ inputs.commit_message || format('Updated from ref: {0}', github.sha) }}"
          git push origin main
