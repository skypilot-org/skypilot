name: docker-build

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: 'SkyPilot PyPI package name'
        required: true
        type: choice
        options:
          - 'skypilot-nightly'
          - 'skypilot'
        default: 'skypilot-nightly'
  workflow_call:
    inputs:
      package_name:
        description: 'SkyPilot PyPI package name'
        required: true
        type: string
    outputs:
      version:
        description: "The version fetched from PyPI"
        value: ${{ jobs.build.outputs.version }}
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.latest_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find the release version
        id: version
        run: |
          # Fetch package info from PyPI
          echo "Fetching package info for ${{ inputs.package_name }}"
          PACKAGE_INFO=$(curl -s https://pypi.org/pypi/${{ inputs.package_name }}/json)
          # Parse JSON and get the latest version
          LATEST_VERSION=$(echo $PACKAGE_INFO | jq -r '.info.version')
          echo "Latest version found: $LATEST_VERSION"
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

      - name: Update Dockerfile version
        run: |
          sed -i 's/skypilot-nightly\[all\]/${{ inputs.package_name }}[all]==${{ steps.version.outputs.latest_version }}/g' Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: "${{ secrets.DOCKER_USERNAME }}/${{ inputs.package_name }}:latest,${{ secrets.DOCKER_USERNAME }}/${{ inputs.package_name }}:${{ steps.version.outputs.latest_version }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
