# The template for the jobs controller

name: {{dag_name}}

file_mounts:
  {{remote_user_yaml_path}}: {{user_yaml_path}}
  {%- if local_user_config_path is not none %}
  {{remote_user_config_path}}: {{local_user_config_path}}
  {%- endif %}
  {%- for remote_catalog_path, local_catalog_path in modified_catalogs.items() %}
  {{remote_catalog_path}}: {{local_catalog_path}}
  {%- endfor %}

setup: |
  {{ sky_activate_python_env }}
  # Disable the pip version check to avoid the warning message, which makes the
  # output hard to read.
  export PIP_DISABLE_PIP_VERSION_CHECK=1

  {%- for cmd in cloud_dependencies_installation_commands %}
  {{cmd}}
  {%- endfor %}

  {% if is_dev %}
  # Internal: disable logging for manually logging into the jobs controller for debugging.
  echo 'export SKYPILOT_DEV=1' >> ~/.bashrc
  {% endif %}
  # Install Flask if not present
  pip list | grep flask > /dev/null 2>&1 || pip install flask 2>&1 > /dev/null

  # Create systemd service file
  cat << EOF | sudo tee /etc/systemd/system/skypilot-dashboard.service
  [Unit]
  Description=SkyPilot Jobs Dashboard
  After=network.target

  [Service]
  Environment="PATH={{ sky_python_env_path }}:\$PATH"
  ExecStart={{ sky_python_cmd }} -m sky.jobs.dashboard.dashboard
  Restart=always

  [Install]
  WantedBy=multi-user.target
  EOF

  # Reload systemd, enable and start the service
  sudo systemctl daemon-reload
  sudo systemctl enable skypilot-dashboard
  sudo systemctl start skypilot-dashboard

run: |
  {{ sky_activate_python_env }}
  # Start the controller for the current managed job.
  python -u -m sky.jobs.controller {{remote_user_yaml_path}} \
    --job-id $SKYPILOT_INTERNAL_JOB_ID {% if retry_until_up %}--retry-until-up{% endif %}

envs:
{%- for env_name, env_value in controller_envs.items() %}
  {{env_name}}: {{env_value}}
{%- endfor %}
