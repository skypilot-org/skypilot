# Full finetuning of Llama-4 Scout 17B MoE model with 128 experts.
#
# Usage:
#
#  HF_TOKEN=xxx sky launch llama-4-scout_gke_llama_factory_sft.yaml -c scout --env HF_TOKEN
#
# This config uses H100 GPUs with 80GB memory each

envs:
  HF_TOKEN: 

resources:
  infra: k8s
  cpus: 100+
  memory: 1000+
  accelerators: H100:8
  disk_tier: best
  network_tier: best

num_nodes: 2

# Optional: configure buckets for dataset and checkpoints. You can then use the /outputs directory to write checkpoints.
# file_mounts:
#  /dataset:
#    source: s3://my-dataset-bucket
#    mode: COPY  # COPY mode will prefetch the dataset to the node for faster access
#  /checkpoints:
#    source: s3://my-checkpoint-bucket
#    mode: MOUNT_CACHED  # MOUNT_CACHED mode will intelligently cache the checkpoint for faster writes

file_mounts:
  /configs: ./configs

setup: |
  # Download the repository configuration package
  wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb

  # Install the keyring package
  sudo dpkg -i cuda-keyring_1.1-1_all.deb

  # Update package list
  sudo apt-get update

  # Install CUDA and build tools
  sudo apt-get install cuda-toolkit-12-6 -y
  sudo apt-get install -y nvidia-cuda-dev libaio-dev libssl-dev build-essential cmake ninja-build

  git clone --depth 1 https://github.com/hiyouga/LLaMA-Factory.git
  cd LLaMA-Factory
  pip install -e ".[torch,metrics,deepspeed,liger-kernel]" --no-build-isolation
  pip install "transformers>=4.51.1"
  pip install deepspeed==0.14.5 --upgrade --force-reinstall --no-cache-dir

run: |
  MASTER_ADDR=$(echo "$SKYPILOT_NODE_IPS" | head -n1)
  echo "Starting distributed finetuning, head node: $MASTER_ADDR"

  cd LLaMA-Factory

  HF_TOKEN=$HF_TOKEN FORCE_TORCHRUN=1 NNODES=$SKYPILOT_NUM_NODES NODE_RANK=$SKYPILOT_NODE_RANK MASTER_ADDR=$MASTER_ADDR MASTER_PORT=29500 llamafactory-cli train /configs/llama4_scout_full_sft.yaml
