name: eval-head

resources:
  cpus: 4+
  memory: 8+
  # No GPU needed for eval head
  # Open ports for dashboard and API
  ports:
    - 8080  # Dashboard and API
  
workdir: .

setup: |
  # Install uv for fast Python package management
  # Create virtual environment and install dependencies
  uv venv --python 3.10 --seed
  source .venv/bin/activate
  
  # Install dependencies
  uv pip install fastapi uvicorn numpy websockets aiofiles aiohttp
  
  # Install PyTorch CPU version (using pip directly for compatibility)
  pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
  
  # Install SkyPilot for cluster discovery
  uv pip install "skypilot"
  
  # Create .sky.yaml if API server is provided
  echo "Creating SkyPilot API configuration..."
  cat > ./sky-config.yaml <<EOF
  api_server:
    endpoint: ${SKYPILOT_API_SERVER_ENDPOINT}
    service_account_token: ${SKYPILOT_API_SERVER_SERVICE_ACCOUNT_TOKEN}
  EOF
  echo "SkyPilot API configured for: ${SKYPILOT_API_SERVER_ENDPOINT}"

run: |
  export PATH="$HOME/.cargo/bin:$PATH"
  source .venv/bin/activate
  
  export SKYPILOT_PROJECT_CONFIG=sky-config.yaml
  # Start the evaluation head server
  python src/eval_head.py \
    --port 8080 \
    --game-server-prefix ${GAME_SERVER_PREFIX:-game-server} \
    --game-server-port ${GAME_SERVER_PORT:-8081} \
    --checkpoint-bucket ${CHECKPOINT_BUCKET:-none}



secrets:
  SKYPILOT_API_SERVER_ENDPOINT: null
  SKYPILOT_API_SERVER_SERVICE_ACCOUNT_TOKEN: null

envs:
  CHECKPOINT_BUCKET: none
  GAME_SERVER_PREFIX: null
  GAME_SERVER_PORT: 8081  # Port where game servers listen
