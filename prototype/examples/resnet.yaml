name: resnet-app
workdir: ~/Downloads/tpu

resources:
  cloud: aws
  instance_type: p3.2xlarge

input:
  inputs: gs://cloud-tpu-test-dataset/fake_imagenet
  estimated_size_gigabytes: 70

output:
  outputs: resnet-model-dir
  estimated_size_gigabytes: 0.1

file_mounts: {
  /tmp/fake_imagenet: gs://cloud-tpu-test-datasets/fake_imagenet,
}

run: 
  preamble: |
    source /home/ubuntu/anaconda3/etc/profile.d/conda.sh
    conda activate resnet
  
  base_cmd: |  
    python -u models/official/resnet/resnet_main.py

  flags:
    use_tpu: False
    mode: train
    train_batch_size: 256
    train_steps: 250
    iterations_per_loop: 125
    data_dir: gs://cloud-tpu-test-datasets/fake_imagenet
    model_dir: resnet-model-dir
    amp: 1
    xla: 1
    loss_scale: 128

# NOTE: Alternatively, can do something like the following.
# run: |
#   source /home/ubuntu/anaconda3/etc/profile.d/conda.sh
#   conda activate resnet

#   python -u models/official/resnet/resnet_main.py --use_tpu=False \
#       --mode=train --train_batch_size=256 --train_steps=250 \
#       --iterations_per_loop=125 \
#       --data_dir=gs://cloud-tpu-test-datasets/fake_imagenet \
#       --model_dir=resnet-model-dir \
#       --amp --xla --loss_scale=128

setup: |
  pip install --upgrade pip

  source /home/ubuntu/anaconda3/etc/profile.d/conda.sh
  conda activate resnet

  if [ $? -eq 0 ]; then
    echo "conda env exists"
  else
    conda create -n resnet python=3.7 -y
    conda activate resnet
    pip install tensorflow==2.4.0 pyyaml
    cd models
    pip install -e .
  fi

# NOTE: Alternatively, can do something like the following.
# setup:
#   preamble: |
#     pip install --upgrade pip

#     source /home/ubuntu/anaconda3/etc/profile.d/conda.sh
#     conda activate resnet

#     if [ $? -eq 0 ]; then
#       echo "conda env exists"
#     else
#       conda create -n resnet python=3.7 -y
#       conda activate resnet
#       pip install tensorflow==2.4.0 pyyaml
#       cd models
#       pip install -e .
#     fi

#   # optional
#   # base_cmd: ...
#   # flags: ...
