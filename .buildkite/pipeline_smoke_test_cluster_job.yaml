# This is an auto-generated Buildkite pipeline by .buildkite/generate_pipeline.py, Please do not edit directly.
steps:
- command: pytest tests/smoke_tests/test_cluster_job.py::test_job_queue --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_job_queue on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_job_queue_with_docker
    --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_job_queue_with_docker on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_job_queue_multinode
    --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_job_queue_multinode on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_large_job_queue --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_large_job_queue on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_fast_large_job_queue
    --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_fast_large_job_queue on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_docker_preinstalled_package
    --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_docker_preinstalled_package on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_multi_echo --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_multi_echo on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_huggingface --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_huggingface on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_inferentia --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_inferentia on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_tpu --gcp
  env:
    LOG_TO_STDOUT: '1'
  label: test_tpu on gcp
- command: pytest tests/smoke_tests/test_cluster_job.py::test_tpu_vm --gcp
  env:
    LOG_TO_STDOUT: '1'
  label: test_tpu_vm on gcp
- command: pytest tests/smoke_tests/test_cluster_job.py::test_tpu_vm_pod --gcp
  env:
    LOG_TO_STDOUT: '1'
  label: test_tpu_vm_pod on gcp
- command: pytest tests/smoke_tests/test_cluster_job.py::test_multi_hostname --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_multi_hostname on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_multi_node_failure --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_multi_node_failure on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_gcp_http_server_with_custom_ports
    --gcp
  env:
    LOG_TO_STDOUT: '1'
  label: test_gcp_http_server_with_custom_ports on gcp
- command: pytest tests/smoke_tests/test_cluster_job.py::test_aws_http_server_with_custom_ports
    --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_aws_http_server_with_custom_ports on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_azure_http_server_with_custom_ports
    --azure
  env:
    LOG_TO_STDOUT: '1'
  label: test_azure_http_server_with_custom_ports on azure
- command: pytest tests/smoke_tests/test_cluster_job.py::test_task_labels_aws --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_task_labels_aws on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_task_labels_gcp --gcp
  env:
    LOG_TO_STDOUT: '1'
  label: test_task_labels_gcp on gcp
- command: pytest tests/smoke_tests/test_cluster_job.py::test_distributed_tf --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_distributed_tf on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_gcp_start_stop --gcp
  env:
    LOG_TO_STDOUT: '1'
  label: test_gcp_start_stop on gcp
- command: pytest tests/smoke_tests/test_cluster_job.py::test_azure_start_stop --azure
  env:
    LOG_TO_STDOUT: '1'
  label: test_azure_start_stop on azure
- command: pytest tests/smoke_tests/test_cluster_job.py::test_autostop --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_autostop on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_autodown --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_autodown on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_cancel_aws --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_cancel_aws on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_cancel_gcp --gcp
  env:
    LOG_TO_STDOUT: '1'
  label: test_cancel_gcp on gcp
- command: pytest tests/smoke_tests/test_cluster_job.py::test_cancel_azure --azure
  env:
    LOG_TO_STDOUT: '1'
  label: test_cancel_azure on azure
- command: pytest tests/smoke_tests/test_cluster_job.py::test_cancel_pytorch --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_cancel_pytorch on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_use_spot --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_use_spot on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_stop_gcp_spot --gcp
  env:
    LOG_TO_STDOUT: '1'
  label: test_stop_gcp_spot on gcp
- command: pytest tests/smoke_tests/test_cluster_job.py::test_inline_env --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_inline_env on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_inline_env_file --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_inline_env_file on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_aws_custom_image --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_aws_custom_image on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_azure_start_stop_two_nodes
    --azure
  env:
    LOG_TO_STDOUT: '1'
  label: test_azure_start_stop_two_nodes on azure
- command: pytest tests/smoke_tests/test_cluster_job.py::test_aws_disk_tier --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_aws_disk_tier on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_gcp_disk_tier --gcp
  env:
    LOG_TO_STDOUT: '1'
  label: test_gcp_disk_tier on gcp
- command: pytest tests/smoke_tests/test_cluster_job.py::test_azure_disk_tier --azure
  env:
    LOG_TO_STDOUT: '1'
  label: test_azure_disk_tier on azure
- command: pytest tests/smoke_tests/test_cluster_job.py::test_azure_best_tier_failover
    --azure
  env:
    LOG_TO_STDOUT: '1'
  label: test_azure_best_tier_failover on azure
- command: pytest tests/smoke_tests/test_cluster_job.py::test_aws_zero_quota_failover
    --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_aws_zero_quota_failover on aws
- command: pytest tests/smoke_tests/test_cluster_job.py::test_gcp_zero_quota_failover
    --gcp
  env:
    LOG_TO_STDOUT: '1'
  label: test_gcp_zero_quota_failover on gcp
- command: pytest tests/smoke_tests/test_cluster_job.py::test_long_setup_run_script
    --aws
  env:
    LOG_TO_STDOUT: '1'
  label: test_long_setup_run_script on aws
