{{- if .Values.ingress.enabled }}
{{- $kubeVersion := .Capabilities.KubeVersion.Major -}}
{{- $kubeMinorVersion := .Capabilities.KubeVersion.Minor | trimSuffix "+" | int -}}
{{- $useNewIngressClass := or (gt ($kubeVersion | int) 1) (and (eq ($kubeVersion | int) 1) (ge $kubeMinorVersion 18)) -}}
{{- $enableBasicAuthInAPIServer := include "skypilot.enableBasicAuthInAPIServer" . | trim | eq "true" -}}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-ingress
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- if not $useNewIngressClass }}
    kubernetes.io/ingress.class: nginx
    {{- end }}
    {{- if index .Values.ingress "oauth2-proxy" "enabled" }}
    # OAuth2 Proxy authentication for browser-based access
    # Bearer token requests bypass OAuth2 proxy and go directly to the application
    nginx.ingress.kubernetes.io/auth-signin: {{ if index .Values.ingress "oauth2-proxy" "use-https" | default false }}https{{ else }}http{{ end }}://$host/oauth2/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url: {{ if index .Values.ingress "oauth2-proxy" "use-https" | default false }}https{{ else }}http{{ end }}://$host/oauth2/auth
    nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-Email, X-Skypilot-Auth
    # Skip OAuth2 authentication for requests with Authorization header (Bearer tokens)
    nginx.ingress.kubernetes.io/auth-snippet: |
      if ($http_authorization ~ "^Bearer sky_.+") {
        # Set x_skypilot_auth_mode variable to make sure the request is validated on the API server side.
        set $x_skypilot_auth_mode "token";
        return 200;
      }
    {{- else if and (not $enableBasicAuthInAPIServer) (or .Values.ingress.authSecret .Values.ingress.authCredentials) }}
    # Basic authentication
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-realm: "SkyPilot API Server"
    nginx.ingress.kubernetes.io/auth-secret: {{ .Values.ingress.authSecret | default (printf "%s-basic-auth" .Release.Name) }}
    {{- end }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-body-size: "1000m"
    {{- if ne .Values.ingress.path "/" }}
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    skypilot.co/ingress-path: {{ .Values.ingress.path }}
    {{- end }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      {{- if index .Values.ingress "oauth2-proxy" "enabled" }}
      # Set X-Skypilot-Auth-Mode header to the value from the auth request.
      proxy_set_header X-Skypilot-Auth-Mode $x_skypilot_auth_mode;
      {{- end }}

spec:
  {{- if $useNewIngressClass }}
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  {{- end }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      {{- /* TODO(aylei): check whether this works for ingress-controllers other than nginx */}}
      - pathType: {{ if eq .Values.ingress.path "/" }}Prefix{{ else }}ImplementationSpecific{{ end }}
        path: {{ .Values.ingress.path }}{{ if ne .Values.ingress.path "/" }}(/|$)(.*){{ end }}
        backend:
          service:
            name: {{ .Release.Name }}-api-service
            port:
              number: 80
{{- end }}
