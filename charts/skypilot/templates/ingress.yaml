apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-ingress
  namespace: {{ .Release.Namespace }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: {{ .Values.ingress.authSecret | default (printf "%s-basic-auth" .Release.Name) }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-body-size: "1000m"
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
        proxy_set_header Upgrade $http_upgrade;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
      }


spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: {{ .Release.Name }}-api-service
            port:
              number: 80
---
# GKE load balancer used for ingress does not work with websocket connections
# (required for our k8s SSH tunneling), so we create a NodePort service that
# exposes the ingress controller.
# NOTE: If httpNodePort is not set, Kubernetes will assign random ports in the 
# NodePort range (default 30000-32767).
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-ingress-controller-np
  namespace: {{ .Release.Namespace }}
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      {{- if .Values.ingress.httpNodePort }}
      nodePort: {{ .Values.ingress.httpNodePort }}
      {{- end }}
      name: http
    - port: 443
      targetPort: 443
      {{- if .Values.ingress.httpsNodePort }}
      nodePort: {{ .Values.ingress.httpsNodePort }}
      {{- end }}
      name: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: skypilot
    app.kubernetes.io/name: ingress-nginx
