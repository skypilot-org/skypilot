{{- /* TODO(aylei): remove this template in v0.10.0 release */ -}}
{{- $createNodePort := false -}}
{{- if eq .Values.ingress.nodePortEnabled nil -}}
  {{- /* Keep existing NodePort service if ingress.nodePortEnabled is not set */ -}}
  {{- $existingService := lookup "v1" "Service" .Release.Namespace (printf "%s-ingress-controller-np" .Release.Name) -}}
  {{- if $existingService -}}
    {{- /* If there is an existing legacy NodePort service, error out and ask user to set ingress.nodePortEnabled explicitly */ -}}
    {{- fail (printf "Service %s-ingress-controller-np is deprecated and will be removed in SkyPilot v0.10.0. Refer to https://docs.skypilot.co/en/latest/reference/api-server/api-server-admin-deploy.html#sky-migrate-legacy-service for migration steps." .Release.Name) -}}
  {{- end -}}
{{- else -}}
  {{- /* Use explicitly set value */ -}}
  {{- $createNodePort = .Values.ingress.nodePortEnabled -}}
{{- end -}}

{{- if and $createNodePort (index .Values "ingress-nginx" "enabled") }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-ingress-controller-np
  namespace: {{ .Release.Namespace }}
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      {{- if .Values.ingress.httpNodePort }}
      nodePort: {{ .Values.ingress.httpNodePort }}
      {{- end }}
      name: http
    - port: 443
      targetPort: 443
      {{- if .Values.ingress.httpsNodePort }}
      nodePort: {{ .Values.ingress.httpsNodePort }}
      {{- end }}
      name: https
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: ingress-nginx
{{- end }}
